A closure is created when a function is defined within another
 function and it retains access to the variables of the outer function, 
even after the outer function has returned.

function outerFunction() {
    let outerVariable = 'I am from the outer scope';

    function innerFunction() {
        console.log(outerVariable); // Accesses outerVariable
    }

    return innerFunction;
}

const closureFunction = outerFunction();    
closureFunction(); // Logs: I am from the outer scope